# docker-compose.yml

services:
  jupyter:
    build: ./docker/backend
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./nb:/home/jovyan/nb
    environment:
      - JUPYTER_ENABLE_LAB=yes
    env_file:
      - .env
    command: jupyter lab --ip 0.0.0.0 --port 8888 --NotebookApp.token='' --NotebookApp.password=''

  api:
    build: ./docker/backend
    ports:
      - "8000:8000"
    working_dir: /app
    volumes:
      - ./api:/app
      - ./filestore:/app/filestore
    environment:
      - MONGODB_URI=mongodb://db:27017/
    env_file:
      - .env
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
      target: builder
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://api:8000
    env_file:
      - .env
    depends_on:
      - api
    command: npm run dev

  db:
    image: mongo
    container_name: db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=chelle
      
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  
  worker:
    build: ./docker/backend
    working_dir: /app
    volumes:
      - ./api:/app
      - ./filestore:/app/filestore
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGODB_URI=mongodb://db:27017/
    env_file:
      - .env
    command: rq worker --url redis://redis:6379
    depends_on:
      - redis
      - db

volumes:
  mongo_data: